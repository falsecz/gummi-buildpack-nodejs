#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2

OLD_HOME=$HOME

# fail fast
set -e

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

VERSION=0.8.15

echo "-----> Fetching Node.js binaries"
#cd $CACHE_DIR

NODE_ARCHIVE="node-v$VERSION-linux-x64.tar.gz"
url="http://nodejs.org/dist/v$VERSION/$NODE_ARCHIVE"


#curl http://nodejs.org/dist/v0.8.16/SHASUMS.txt -s -o - | grep node-v0.8.16-linux-x64.tar.gz > sums

HOME=$CACHE_DIR

NODE_BINDIR=$CACHE_DIR/node-v$VERSION-linux-x64/bin/
NODE=$NODE_BINDIR/node
NPM=$NODE_BINDIR/npm

if [ ! -f $NPM ]
then
	echo Downloading node
	curl $url -s -o - | tar xzf - -C $CACHE_DIR
else
	echo Using cached node    
fi



$NPM cache list


echo "-----> Vendoring node into slug"
mkdir -p "$BUILD_DIR/bin"
cp "$NODE" "$BUILD_DIR/bin/node"




function run_npm() {
  command="$1"

  cd $BUILD_DIR
  HOME="$BUILD_DIR" $NPM $command 2>&1 | indent

  if [ "${PIPESTATUS[*]}" != "0 0" ]; then
    echo " !     Failed to $command dependencies with npm"
    exit 1
  fi
}

echo "-----> Installing dependencies with npm"
run_npm "config set color always"
run_npm "install --production --cache-min 999999"
run_npm "rebuild"
echo "Dependencies installed" | indent

HOME=$OLD_HOME

exit 0


















#echo "Dependencies installed" | indent
#$NPM -v

# cd $NPM_DIR
# curl https://npmjs.org/install.sh | clean=yes sh






exit 1

TOOLS=/buildpacks/nodejs/tools
NODE_PATH=$TOOLS/node/bin

PATH=$NODE_PATH:$PATH
NODE=$NODE_PATH/node
NPM="$NODE $TOOLS/node/bin/npm"

#FOREWOMAN=`$NPM list` # | grep forewoman | wc -l `
#echo $FOREWOMAN
#exit 1
#if [ $FOREWOMAN -eq 0 ]
#then
#    echo ">sdasdasd"
#fi

tput setaf 2
echo -n "> Node.js buildpack $($NODE -v) | npm@$($NPM -v) "
tput sgr0
echo
#BRANCH=$1

SRC=$1 # /tmp/gummi/$BRANCH

cd $SRC
RES='x'
$NPM config set color always
$NPM install 2>&1 | indent
x=${PIPESTATUS[0]}
#echo ${PIPESTATUS[0]}

#echo "npm done."
#echo $x
#exit 0
exit $x
#echo EEEEEE $? $RES

#PROCFILE=$SRC/Procfile
#echo $NPM
#$NPM list

#$NPM install
#cat package.json
#ping -c 1 google.com


#ls -la


